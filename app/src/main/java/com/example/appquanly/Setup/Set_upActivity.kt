package com.example.appquanly.Setup

import android.app.AlertDialog
import android.graphics.Color
import android.os.Bundle
import android.text.Spannable
import android.text.SpannableString
import android.text.Spanned
import android.text.style.ForegroundColorSpan
import android.widget.LinearLayout
import android.widget.TextView
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity
import com.example.appquanly.R
import com.example.appquanly.Setup.contract.Set_upContract
import com.example.appquanly.Setup.presenter.Set_upPresenter

class Set_upActivity : AppCompatActivity(), Set_upContract.View {

    private lateinit var presenter: Set_upContract.Presenter
    private lateinit var layoutRestoreData: LinearLayout
    private lateinit var tvRestoreDescription: TextView  // üëà th√™m d√≤ng n√†y

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_establish)

        presenter = Set_upPresenter(this)

        layoutRestoreData = findViewById(R.id.layoutRestoreData)
        tvRestoreDescription = findViewById(R.id.tvRestoreDescription)

        // üëâ ƒê·∫∑t ph·∫ßn text c√≥ ch·ªØ m√†u ƒë·ªè
        val text = "Ch·ª©c nƒÉng s·∫Ω ti·∫øn h√†nh x√≥a d·ªØ li·ªáu tr√™n thi·∫øt b·ªã c·ªßa b·∫°n v√† thay th·∫ø b·∫±ng d·ªØ li·ªáu ƒë√£ l∆∞u tr√™n m√°y ch·ªß."
        val spannable = SpannableString(text)
        val redPart = "x√≥a d·ªØ li·ªáu tr√™n thi·∫øt b·ªã c·ªßa b·∫°n"
        val start = text.indexOf(redPart)
        val end = start + redPart.length
        if (start >= 0) {
            spannable.setSpan(
                ForegroundColorSpan(Color.RED),
                start,
                end,
                Spanned.SPAN_EXCLUSIVE_EXCLUSIVE
            )
        }
        tvRestoreDescription.text = spannable

        layoutRestoreData.setOnClickListener {
            presenter.onRestoreDataClicked()
        }
    }

    override fun showRestoreDataDialog() {
        val builder = AlertDialog.Builder(this)
        builder.setTitle("X√°c nh·∫≠n l·∫•y l·∫°i to√†n b·ªô d·ªØ li·ªáu")

        val fullText = "Ch·ª©c nƒÉng s·∫Ω ti·∫øn h√†nh x√≥a d·ªØ li·ªáu tr√™n thi·∫øt b·ªã c·ªßa b·∫°n v√† thay th·∫ø b·∫±ng d·ªØ li·ªáu ƒë√£ l∆∞u tr√™n m√°y ch·ªß. B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën th·ª±c hi·ªán ch·ª©c nƒÉng n√†y kh√¥ng?"
        val spannable = SpannableString(fullText)

        val redPart = "x√≥a d·ªØ li·ªáu tr√™n thi·∫øt b·ªã c·ªßa b·∫°n"
        val start = fullText.indexOf(redPart)
        val end = start + redPart.length
        if (start >= 0) {
            spannable.setSpan(
                ForegroundColorSpan(Color.RED),
                start,
                end,
                Spannable.SPAN_EXCLUSIVE_EXCLUSIVE
            )
        }

        builder.setMessage(spannable)

        builder.setNegativeButton("KH√îNG") { dialog, _ ->
            dialog.dismiss()
        }

        builder.setPositiveButton("C√ì") { dialog, _ ->
            showRestoreSuccess()
            dialog.dismiss()
        }

        val dialog = builder.create()
        dialog.show()

        dialog.getButton(AlertDialog.BUTTON_POSITIVE)?.setTextColor(Color.BLUE)
        dialog.getButton(AlertDialog.BUTTON_NEGATIVE)?.setTextColor(Color.RED)
    }

    override fun showRestoreSuccess() {
        Toast.makeText(this, "ƒê√£ x√°c nh·∫≠n l·∫•y l·∫°i d·ªØ li·ªáu", Toast.LENGTH_SHORT).show()
        // TODO: G·ªçi x·ª≠ l√Ω ƒë·ªìng b·ªô d·ªØ li·ªáu t·∫°i ƒë√¢y
    }
}
